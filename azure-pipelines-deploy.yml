trigger: none
pr: none

pool: azure pipelines



variables:
  - group: acr-devops
  - name: tag
    value: 0.1.6
  - name: serviceName
    value: scheck-ftpserver-api
  - name: aksNamespace
    value: customs 
  - name: acrDockerRepo
    value: container
  - name: chartName
    value: helm/scheck-ftpserver-api

jobs:
  - deployment: Deployment
    displayName: Deploy to dev
    workspace:
      clean: all
    environment: dev
    strategy:
      runOnce:
        deploy:
          steps:
          # - task: AzureCLI@2
          #   displayName: Docker pull image
          #   inputs:
          #     azureSubscription: azureResourcesSharedSC
          #     workingDirectory: $(System.DefaultWorkingDirectory)
          #     scriptType: pscore
          #     scriptLocation: inlineScript
          #     inlineScript: |
          #       docker login '$(acrName)' --username '$(ACR_USER_NAME)' --password '$(ACR_PASSWORD)'
          #       docker pull $(acrName)/$(acrDockerRepo)/$(serviceName):$(tag)
            - checkout: self
            # - task: AzureCLI@2
            #   displayName: Get credentials & kubectl apply
            #   inputs:
            #     azureSubscription: azureResourcesDevSC
            #     workingDirectory: $(System.DefaultWorkingDirectory)
            #     scriptType: pscore
            #     scriptLocation: inlineScript
            #     inlineScript: |
            #       $acrName = '$(acrName)'
            #       $aksNamespace = 'customs'
            #       $subscriptionId = '60d5585d-bac5-4c27-ba3b-f5d255a13fc2'
            #       $aksName = 'aks-simplechain-dev'
            #       $aksRg = 'rg-simplechain-dev'

            #       az account set --subscription $subscriptionId
            #       az aks get-credentials --resource-group $aksRg --name $aksName --overwrite-existing --admin
            #       kubectl delete deployment ftp-server -n customs
            #       #kubectl apply -f deployment.yaml -n $aksNamespace
            #       kubectl delete service service-ftpserver -n customs
            #       kubectl delete service ftp-service -n customs
            #       #kubectl apply -f service.yaml -n $aksNamespace
            #       kubectl delete ingress scheck-ftpserver-ingress -n customs
            #       #kubectl apply -f ingress.yaml -n $aksNamespace

            - task: PowerShell@2
              displayName: "Helm login and pull chart"
              inputs:
                targetType: 'inline'
                workingDirectory: $(System.DefaultWorkingDirectory)
                script: |
                  $acrName = '$(acrName)'
                  $chartName = '$(chartName)'
                  $tag = '$(tag)'
                  
                  #auth to acr
                  write-verbose "Authenticating to ACR." -vb
                  helm registry login $acrName --username $(ACR_USER_NAME) --password $(ACR_PASSWORD)
                  helm repo update
                  
                  #create helm chart folder for service
                  mkdir helm 
                  cd helm/
                  #download chart
                  write-verbose "Pull Chart Name $chartName with version $tag" -vb
                  helm pull oci://$acrName/$chartName --version $tag --untar
                  ls
              env: 
                HELM_EXPERIMENTAL_OCI: "1"

            - task: AzureCLI@2
              displayName: Get credentials & helm deploy service
              inputs:
                azureSubscription: azureResourcesDevSC
                workingDirectory: $(System.DefaultWorkingDirectory)
                scriptType: pscore
                scriptLocation: inlineScript
                inlineScript: |
                  $chartName = '$(chartName)'
                  $tag = '$(tag)'
                  $serviceName = '$(serviceName)'
                  $k8sNamespace = 'customs'
                  $aksName = 'aks-simplechain-dev'
                  $aksRg = 'rg-simplechain-dev'
                                    
                  az aks get-credentials --resource-group $aksRg --name $aksName --overwrite-existing --admin
                  write-verbose "Install Chart Name $chartName with version $tag" -vb
                  #kubectl delete ingress scheck-ftpserver-api -n customs
                  #kubectl delete service scheck-ftpserver-api -n customs
                  helm uninstall scheck-ftpserver-api --namespace customs
                  #helm ls -n customs

                  helm dependency update $chartName/
                  helm upgrade --install $serviceName $chartName/ --namespace $k8sNamespace
              env: 
                HELM_EXPERIMENTAL_OCI: "1"